// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/node.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SyncState int32

const (
	SyncState_WAIT_FOR_SYNCING SyncState = 0
	SyncState_SYNC_STARTED     SyncState = 1
	SyncState_SYNC_FINISHED    SyncState = 2
	SyncState_PERSIST_FINISHED SyncState = 3
)

var SyncState_name = map[int32]string{
	0: "WAIT_FOR_SYNCING",
	1: "SYNC_STARTED",
	2: "SYNC_FINISHED",
	3: "PERSIST_FINISHED",
}
var SyncState_value = map[string]int32{
	"WAIT_FOR_SYNCING": 0,
	"SYNC_STARTED":     1,
	"SYNC_FINISHED":    2,
	"PERSIST_FINISHED": 3,
}

func (x SyncState) String() string {
	return proto.EnumName(SyncState_name, int32(x))
}
func (SyncState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_node_c55aed2e3f1b2fcb, []int{0}
}

type NodeData struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	WebsocketPort        uint32   `protobuf:"varint,2,opt,name=websocket_port,json=websocketPort,proto3" json:"websocket_port,omitempty"`
	JsonRpcPort          uint32   `protobuf:"varint,3,opt,name=json_rpc_port,json=jsonRpcPort,proto3" json:"json_rpc_port,omitempty"`
	ProtocolVersion      uint32   `protobuf:"varint,4,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	TlsWebsocketDomain   string   `protobuf:"bytes,5,opt,name=tls_websocket_domain,json=tlsWebsocketDomain,proto3" json:"tls_websocket_domain,omitempty"`
	TlsWebsocketPort     uint32   `protobuf:"varint,6,opt,name=tls_websocket_port,json=tlsWebsocketPort,proto3" json:"tls_websocket_port,omitempty"`
	TlsJsonRpcDomain     string   `protobuf:"bytes,7,opt,name=tls_json_rpc_domain,json=tlsJsonRpcDomain,proto3" json:"tls_json_rpc_domain,omitempty"`
	TlsJsonRpcPort       uint32   `protobuf:"varint,8,opt,name=tls_json_rpc_port,json=tlsJsonRpcPort,proto3" json:"tls_json_rpc_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeData) Reset()         { *m = NodeData{} }
func (m *NodeData) String() string { return proto.CompactTextString(m) }
func (*NodeData) ProtoMessage()    {}
func (*NodeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_c55aed2e3f1b2fcb, []int{0}
}
func (m *NodeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeData.Unmarshal(m, b)
}
func (m *NodeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeData.Marshal(b, m, deterministic)
}
func (dst *NodeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeData.Merge(dst, src)
}
func (m *NodeData) XXX_Size() int {
	return xxx_messageInfo_NodeData.Size(m)
}
func (m *NodeData) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeData.DiscardUnknown(m)
}

var xxx_messageInfo_NodeData proto.InternalMessageInfo

func (m *NodeData) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *NodeData) GetWebsocketPort() uint32 {
	if m != nil {
		return m.WebsocketPort
	}
	return 0
}

func (m *NodeData) GetJsonRpcPort() uint32 {
	if m != nil {
		return m.JsonRpcPort
	}
	return 0
}

func (m *NodeData) GetProtocolVersion() uint32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *NodeData) GetTlsWebsocketDomain() string {
	if m != nil {
		return m.TlsWebsocketDomain
	}
	return ""
}

func (m *NodeData) GetTlsWebsocketPort() uint32 {
	if m != nil {
		return m.TlsWebsocketPort
	}
	return 0
}

func (m *NodeData) GetTlsJsonRpcDomain() string {
	if m != nil {
		return m.TlsJsonRpcDomain
	}
	return ""
}

func (m *NodeData) GetTlsJsonRpcPort() uint32 {
	if m != nil {
		return m.TlsJsonRpcPort
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeData)(nil), "pb.NodeData")
	proto.RegisterEnum("pb.SyncState", SyncState_name, SyncState_value)
}

func init() { proto.RegisterFile("pb/node.proto", fileDescriptor_node_c55aed2e3f1b2fcb) }

var fileDescriptor_node_c55aed2e3f1b2fcb = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xdd, 0x4a, 0xf3, 0x30,
	0x1c, 0x87, 0xdf, 0x76, 0xaf, 0x73, 0xfb, 0xbb, 0xce, 0x2c, 0xee, 0xa0, 0x27, 0xc2, 0x18, 0x08,
	0x9b, 0xf8, 0x05, 0x5e, 0xc1, 0xb0, 0x9b, 0x56, 0xa1, 0x8e, 0xa4, 0x38, 0x04, 0x21, 0xb4, 0x5d,
	0x0e, 0xe6, 0x6a, 0x13, 0xda, 0xa8, 0xec, 0x52, 0xbd, 0x1b, 0xe9, 0xbf, 0xfb, 0x70, 0x87, 0x7d,
	0xf2, 0xe4, 0xe9, 0x8f, 0x80, 0xa3, 0xe3, 0xeb, 0x4c, 0xcd, 0xe5, 0x95, 0xce, 0x95, 0x51, 0xd4,
	0xd6, 0x71, 0xff, 0xc7, 0x86, 0x46, 0xa0, 0xe6, 0xd2, 0x8b, 0x4c, 0x44, 0x4f, 0x01, 0xf4, 0x67,
	0x9c, 0x2e, 0x12, 0xb1, 0x94, 0x2b, 0xd7, 0xea, 0x59, 0x83, 0x16, 0x6b, 0x56, 0xe4, 0x49, 0xae,
	0xe8, 0x19, 0xb4, 0xbf, 0x65, 0x5c, 0xa8, 0x64, 0x29, 0x8d, 0xd0, 0x2a, 0x37, 0xae, 0xdd, 0xb3,
	0x06, 0x0e, 0x73, 0xb6, 0x74, 0xaa, 0x72, 0x43, 0xfb, 0xe0, 0xbc, 0x17, 0x2a, 0x13, 0xb9, 0x4e,
	0x2a, 0xab, 0x86, 0xd6, 0x51, 0x09, 0x99, 0x4e, 0xd0, 0x19, 0x02, 0xc1, 0x0d, 0x89, 0x4a, 0xc5,
	0x97, 0xcc, 0x8b, 0x85, 0xca, 0xdc, 0xff, 0xa8, 0x1d, 0x6f, 0xf8, 0x4b, 0x85, 0xe9, 0x0d, 0x74,
	0x4d, 0x5a, 0x88, 0xdd, 0x9f, 0xe7, 0xea, 0x23, 0x5a, 0x64, 0xee, 0x41, 0xcf, 0x1a, 0x34, 0x19,
	0x35, 0x69, 0x31, 0xdb, 0x1c, 0x79, 0x78, 0x42, 0x2f, 0x80, 0xee, 0xdf, 0xc0, 0x15, 0x75, 0xcc,
	0x93, 0xbf, 0x3e, 0x4e, 0xb9, 0x84, 0x93, 0xd2, 0xde, 0x4e, 0x5e, 0xe7, 0x0f, 0x31, 0x5f, 0xea,
	0x8f, 0xd5, 0xee, 0x75, 0x7c, 0x08, 0x9d, 0x3d, 0x1d, 0xdb, 0x0d, 0x6c, 0xb7, 0x77, 0x72, 0x59,
	0x3e, 0x7f, 0x83, 0x26, 0x5f, 0x65, 0x09, 0x37, 0x91, 0x91, 0xb4, 0x0b, 0x64, 0x36, 0xf2, 0x43,
	0x31, 0x79, 0x66, 0x82, 0xbf, 0x06, 0x77, 0x7e, 0x70, 0x4f, 0xfe, 0x51, 0x02, 0xad, 0xf2, 0x43,
	0xf0, 0x70, 0xc4, 0xc2, 0xb1, 0x47, 0x2c, 0xda, 0x01, 0x07, 0xc9, 0xc4, 0x0f, 0x7c, 0xfe, 0x30,
	0xf6, 0x88, 0x5d, 0x5e, 0x9d, 0x8e, 0x19, 0xf7, 0x79, 0xb8, 0xa3, 0xb5, 0xb8, 0x8e, 0x0f, 0x75,
	0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x37, 0x3b, 0x5a, 0x28, 0xd5, 0x01, 0x00, 0x00,
}
